{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28100\viewh24140\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 1. Goal\
\
We want to use 120 music test scores of 50 Songs to build a recommender system. \
\
This system would observe (or rather question) a new user (age group, gender and let\'92s say 5 songs)\
\
And then recommend a new song for the user - which he/she can then like or dislike? \
The level of likes would be a suitable score for the quality of recommendations and thus the system.\
\
2. Status quo (what we know and have, or could easily get)\
\
We know something about 120 people, i.e. \
- age/demogroup\
- gender\
- if they were tested by CATI or CAWI (by telephone call or through an online survey)\
- what genre they lean to among those tested (entry gate)\
- how much time they spend daily listening to radio (light, normal, heavy users)\
- which radiostations are their preferred stations (Stammsender (SS))\
- if they also cume one of two other stations (Wechselsender (WS))\
\
We have no prior information about the 50 songs tested, but we know their scores from\
1 - I don\'92t know this song\
2 - I know the song, but strongly dislike it\
3 - I know the song and would tolerate it\
4 - I don\'92t know how I feel about this song (discouraged in CATI)\
5 - I know and like this song, but it is being played too often on the radio\
6 - I know and like this song and I don\'92t think it is being played to often on the radio\
7 - I know and love this song (which means, I don\'92t think it\'92s being played too often on the radio\
\
We could probably get the audio features (10 Variables?) and number of streams for our 120 Songs from Spotify, if necessary.\
\
3. What is there to do:\
\
A) If we want to use the music test scores, the data has to be wrangled in order to get a suitable format. \
This would include:\
\
- deciding, which variable are of interest, which have to be \'84translated in numeric format, and which have to be dummified\'93\
- Building a function that enriches the song-data by adding the Spotify audio features figures (or a selection thereof)\
\
B) Since we are probably going to have quite a few variables, a Principal Component Analysis would have to reduce dimensions\
- Building a PCA Procedure that allows us to capture at least X Percent of the variance in the dataset\
	- does this mean, that we are boiling down the song list for the dataset to X, in order not to have too many songs?\
	- which of the sociodemographic variables can be reduced?\
\
C) A Cluster-Analysis \
- Deciding which distance measure to use (or rather reasoning, why one that would allow for a cluster algorithm to be applied is suitable\
- Deciding (either heuristically or by dendrogram) how many clusters to calculate\
- Performing a Cluster-Analysis on the data, probably by a k-means algorithm\
\
D) Recommender System build\
- creating a questionnaire environment that performs the test and (simple version: Spotify-List/Youtube Link / Scale 2:7, 1 not included)\
- pipes the result to the recommender system\
- which then returns a cluster and makes recommendation for the user for another song to be liked or disliked (again score 1 through 7?)\
- extra credit: the score generated by that user is added to the database and makes the next recommendation even better (cycle?)\
\
E) Presentation:\
- Create a presentation to the project that takes the audience through the process\
- Enable a live-demo that allows to audience to \'84get it\'93\
\
\
\
  \
\
}